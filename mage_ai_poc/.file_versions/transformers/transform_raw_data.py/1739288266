if "transformer" not in globals():
    from mage_ai.data_preparation.decorators import transformer

import subprocess


@transformer
def create_core_data(*args, **kwargs):
    script_path = "./mage_ai_poc/scripts/deploy-dbt.sh"
    db = "core"
    model = "covid_data"
    try:
        result = subprocess.run(
            [script_path, db, model],
            check=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
        )

        # Print the output from the script
        print("Script output:")
        print(result.stdout)

        # If there is any error output, print that as well
        if result.stderr:
            print("Script error output:")
            print(result.stderr)

    except subprocess.CalledProcessError as e:
        # Handle errors if the script fails
        print(f"Error executing script: {e}")
        print(f"Return code: {e.returncode}")
        print(f"Error output: {e.stderr}")


@transformer
def create_core_extensions_data():
    script_path = "./mage_ai_poc/scripts/deploy-dbt.sh"
    db = "core_extensions"

    # This specify the sequence of deployment based on dependencies
    models = ["dim_country", "dim_date", 
            "dim_province_state", "fact_covid_daily",
            "fact_change_over_time", "fact_top_frequency"]
    for model in models:
        try:
            result = subprocess.run(
                [script_path, db, model],
                check=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True,
            )

            # Print the output from the script
            print("Script output:")
            print(result.stdout)

            # If there is any error output, print that as well
            if result.stderr:
                print("Script error output:")
                print(result.stderr)

        except subprocess.CalledProcessError as e:
            # Handle errors if the script fails
            print(f"Error executing script: {e}")
            print(f"Return code: {e.returncode}")
            print(f"Error output: {e.stderr}")
